# Generated by Django 5.2.4 on 2025-09-10 20:33

from django.conf import settings
from django.db import migrations, models
from django.db.models import Count, Max


def clean_guest_likes(apps, schema_editor):
    LikedItem = apps.get_model('common', 'LikedItem')

    # 1) Normalize empty strings to NULL so they’re excluded by the partial unique index
    LikedItem.objects.filter(session_key='').update(session_key=None)

    # 2) If both owners set, prefer the user and drop the session_key (enforce XOR)
    LikedItem.objects.filter(user__isnull=False, session_key__isnull=False).update(session_key=None)

    # 3) Remove fully orphaned rows (no user AND no session_key) — they can’t belong to anyone
    LikedItem.objects.filter(user__isnull=True, session_key__isnull=True).delete()

    # 4) Deduplicate user+jewel (keep the most recent id)
    dup_user = (LikedItem.objects
                .filter(user__isnull=False)
                .values('user_id', 'jewel_id')
                .annotate(cnt=Count('id'), keep=Max('id'))
                .filter(cnt__gt=1))
    for r in dup_user:
        (LikedItem.objects
         .filter(user_id=r['user_id'], jewel_id=r['jewel_id'])
         .exclude(id=r['keep'])
         ).delete()

    # 5) Deduplicate session_key+jewel for non-null session keys (keep the most recent id)
    dup_guest = (LikedItem.objects
                 .filter(session_key__isnull=False)
                 .values('session_key', 'jewel_id')
                 .annotate(cnt=Count('id'), keep=Max('id'))
                 .filter(cnt__gt=1))
    for r in dup_guest:
        (LikedItem.objects
         .filter(session_key=r['session_key'], jewel_id=r['jewel_id'])
         .exclude(id=r['keep'])
         ).delete()


class Migration(migrations.Migration):

    dependencies = [
        ("common", "0003_remove_likeditem_uniq_user_jewel_like_and_more"),
        ("jewels", "0017_alter_jewel_rating_avg"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.RemoveConstraint(
            model_name="likeditem",
            name="uniq_user_jewel_like",
        ),
        migrations.RemoveConstraint(
            model_name="likeditem",
            name="uniq_session_jewel_like",
        ),
        migrations.AlterField(
            model_name="likeditem",
            name="session_key",
            field=models.CharField(blank=True, db_index=True, max_length=40, null=True),
        ),

        migrations.RunPython(
            clean_guest_likes,
            migrations.RunPython.noop
        ),

        migrations.AddConstraint(
            model_name="likeditem",
            constraint=models.UniqueConstraint(
                condition=models.Q(("user__isnull", False)),
                fields=("user", "jewel"),
                name="uniq_like_user_jewel",
            ),
        ),
        migrations.AddConstraint(
            model_name="likeditem",
            constraint=models.UniqueConstraint(
                condition=models.Q(("session_key", False), _negated=True),
                fields=("session_key", "jewel"),
                name="uniq_like_session_jewel",
            ),
        ),
        migrations.AddConstraint(
            model_name="likeditem",
            constraint=models.CheckConstraint(
                condition=models.Q(
                    models.Q(("session_key__isnull", True), ("user__isnull", False)),
                    models.Q(("session_key__isnull", False), ("user__isnull", True)),
                    _connector="OR",
                ),
                name="like_exactly_one_owner",
            ),
        ),
    ]
